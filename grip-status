#!/usr/bin/env python3

# COMP2041/9044 Assignment2
# grip-status
#
# This program was written by Melina Salardini (z5393518)
# on july 28, 2024
#
# it should show the status of a file in the currecnt dir, index and repository

import os
import sys


grip_dir = '.grip'
index_dir = os.path.join(grip_dir, 'index')
commit_dir = os.path.join(grip_dir, 'commits')

# check if the .grip dir exists
if not os.path.exists(grip_dir):
    print(f"grip-status: error: grip repository directory .grip not found",
          file=sys.stderr)
    sys.exit(1)


# function to get the latest commit
def get_latest_commit():
    if not os.path.exists(commit_dir):
        return None
    
    # sort the commits by their number
    commit_numbers = sorted([int(d.split('_')[1]) for d in 
                             os.listdir(commit_dir) if d.startswith('commit_')])
    if not commit_numbers:
        return None
    
    latest_commit = commit_numbers[-1]
    return os.path.join(commit_dir, f'commit_{latest_commit}')


# function to get the status
def get_file_status(filename):
    file_in_dir = filename
    file_in_index = os.path.join(index_dir, filename)
    marked_file_in_index = os.path.join(index_dir, f"{filename}?")
    latest_commit = get_latest_commit()
    file_in_commit = os.path.join(latest_commit, filename) if latest_commit else None

    # get the status
    if os.path.exists(file_in_dir):
        if os.path.exists(file_in_index):
            if file_in_commit and os.path.exists(file_in_commit):
                if open(file_in_index).read() != open(file_in_dir).read():
                    if open(file_in_index).read() != open(file_in_commit).read():
                        return "file changed, different changes staged for commit"
                    else:
                        return "file changed, changes not staged for commit"
                else:
                    if open(file_in_index).read() != open(file_in_commit).read():
                        return "file changed, changes staged for commit"
                    else:
                        return "same as repo"
            else:
                if open(file_in_index).read() != open(file_in_dir).read():
                    return "added to index, file changed"
            return "added to index"
        elif os.path.exists(marked_file_in_index):
            if file_in_commit and os.path.exists(file_in_commit):
                return "deleted from index"
            else:
                return "untracked"
        else:
            return "untracked"
    else:
        if os.path.exists(marked_file_in_index):
            if file_in_commit and os.path.exists(file_in_commit):
                return "file deleted, deleted from index"
        elif os.path.exists(file_in_index):
            if file_in_commit and os.path.exists(file_in_commit):
                return "file deleted"
            else:
                return "added to index, file deleted"
        

# get all the files in the current and index dir
all_files = set(os.listdir('.')) | set(os.listdir(index_dir))
visited = set()
# check the status
for filename in sorted(all_files):
    if filename.endswith('?'):
        filename = filename[:-1]
    if filename != ".grip" and filename not in visited:
        status = get_file_status(filename)
        visited.add(filename)
        if not status == None:
            print(f"{filename} - {status}")